
CREATE SCHEMA FreeNForSale;

USE FreeNForSale;

CREATE TABLE UserLoginInfo(
	UId INT PRIMARY KEY AUTO_INCREMENT,
	UserName VARCHAR(25) UNIQUE NOT NULL,
	Password VARCHAR(15) NOT NULL
);

CREATE TABLE User (
	UId INT PRIMARY KEY,
	Name VARCHAR(30) NOT NULL,
	Bdate DATE,
	Phone INT NOT NULL,
	Email VARCHAR(30) NOT NULL,
	Street VARCHAR(25),
	City VARCHAR(15),
	StateId INT,
	Zipcode INT,
	Sex VARCHAR(1),
	SSN BIGINT,
	LastLoginTime DATETIME NOT NULL,
	FailedAttempts INT NOT NULL,
	ProfilePhoto VARCHAR(100)
);

CREATE TABLE State(
	StateId INT PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR(2) NOT NULL,
	FullName VARCHAR(30) NOT NULL
);

CREATE TABLE Inventory(
	ItemId INT PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR(50) NOT NULL,
	TotalQuantity INT NOT NULL,
	RemainingQuantity INT NOT NULL,
	Description VARCHAR(200) NOT NULL,
	CategoryId INT NOT NULL,
	Price FLOAT NOT NULL,
	SellerId INT NOT NULL,
	Location VARCHAR(50) NOT NULL
);

CREATE TABLE Category(
	CategoryId INT PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR(50)
);

CREATE TABLE InventoryImage(
	ItemId INT,
	ImageId INT,
	Image VARCHAR(100) NOT NULL,
	Rank BOOL NOT NULL,
	PRIMARY KEY(ItemId,ImageId)
);

CREATE TABLE Finance(
	UId INT,
	CardNo CHAR(16) NOT NULL,
	CVV INT NOT NULL,
	ExpiryDate DATE NOT NULL,
	CardType VARCHAR(10) NOT NULL,
	PRIMARY KEY(UId,CardNo)
);

CREATE TABLE Cart(
	CartId INT AUTO_INCREMENT,
	UId INT,
	ItemId INT,
	Quantity INT NOT NULL,
	Amount FLOAT NOT NULL,
	Completed TINYINT NOT NULL,
	PRIMARY KEY(CartId,UId,ItemId)
);

CREATE TABLE Transaction(
	TId INT AUTO_INCREMENT,
	UId INT,
	ItemId INT,
	PurchaseTime DATETIME NOT NULL,
	Quantity INT NOT NULL,
	Amount FLOAT NOT NULL,
	PaymentType VARCHAR(10) NOT NULL,
	PRIMARY KEY(TId,UId,ItemId)
);

CREATE TABLE SellerReview(
	SellerId INT PRIMARY KEY,
	Rating INT NOT NULL,
	Comment VARCHAR(150),
	UId INT NOT NULL
);

ALTER TABLE User ADD FOREIGN KEY (UId) REFERENCES UserLoginInfo(UId);
ALTER TABLE User ADD FOREIGN KEY (StateId) REFERENCES State(StateId);
ALTER TABLE Inventory ADD FOREIGN KEY (SellerId) REFERENCES User(UId);
ALTER TABLE Inventory ADD FOREIGN KEY (CategoryId) REFERENCES Category(CategoryId);
ALTER TABLE InventoryImage ADD FOREIGN KEY (ItemId) REFERENCES Inventory(ItemId);
ALTER TABLE Finance ADD FOREIGN KEY (UId) REFERENCES User(UId);
ALTER TABLE Cart ADD FOREIGN KEY (UId) REFERENCES User(UId);
ALTER TABLE Cart ADD FOREIGN KEY (ItemId) REFERENCES Inventory(ItemId);
ALTER TABLE Transaction ADD FOREIGN KEY (UId) REFERENCES User(UId);
ALTER TABLE Transaction ADD FOREIGN KEY (ItemId) REFERENCES Inventory(ItemId);
ALTER TABLE SellerReview ADD FOREIGN KEY (SellerId) REFERENCES User(UId);
ALTER TABLE SellerReview ADD FOREIGN KEY (UId) REFERENCES User(UId);

CREATE TABLE SellerInfo (
	SellerId INT PRIMARY KEY,
	OverallRating float
);

ALTER TABLE SellerInfo ADD FOREIGN KEY (SellerId) REFERENCES User(UId);
