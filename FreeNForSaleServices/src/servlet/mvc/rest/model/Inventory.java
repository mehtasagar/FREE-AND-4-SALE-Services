package servlet.mvc.rest.model;// default package
// Generated Apr 17, 2016 3:22:53 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Inventory generated by hbm2java
 */
@Entity
@Table(name = "inventory", catalog = "freenforsale")
public class Inventory implements java.io.Serializable {

	private Integer itemId;
	private Category category;
	private User user;
	private String name;
	private int totalQuantity;
	private int remainingQuantity;
	private String description;
	private float price;
	private String location;
	private Set transactions = new HashSet(0);
	private Set carts = new HashSet(0);
	private Set inventoryimages = new HashSet(0);

	public Inventory() {
	}

	public Inventory(Category category, User user, String name, int totalQuantity, int remainingQuantity,
			String description, float price, String location) {
		this.category = category;
		this.user = user;
		this.name = name;
		this.totalQuantity = totalQuantity;
		this.remainingQuantity = remainingQuantity;
		this.description = description;
		this.price = price;
		this.location = location;
	}

	public Inventory(Category category, User user, String name, int totalQuantity, int remainingQuantity,
			String description, float price, String location, Set transactions, Set carts, Set inventoryimages) {
		this.category = category;
		this.user = user;
		this.name = name;
		this.totalQuantity = totalQuantity;
		this.remainingQuantity = remainingQuantity;
		this.description = description;
		this.price = price;
		this.location = location;
		this.transactions = transactions;
		this.carts = carts;
		this.inventoryimages = inventoryimages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ItemId", unique = true, nullable = false)
	public Integer getItemId() {
		return this.itemId;
	}

	public void setItemId(Integer itemId) {
		this.itemId = itemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CategoryId", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SellerId", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "Name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "TotalQuantity", nullable = false)
	public int getTotalQuantity() {
		return this.totalQuantity;
	}

	public void setTotalQuantity(int totalQuantity) {
		this.totalQuantity = totalQuantity;
	}

	@Column(name = "RemainingQuantity", nullable = false)
	public int getRemainingQuantity() {
		return this.remainingQuantity;
	}

	public void setRemainingQuantity(int remainingQuantity) {
		this.remainingQuantity = remainingQuantity;
	}

	@Column(name = "Description", nullable = false, length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Price", nullable = false, precision = 12, scale = 0)
	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@Column(name = "Location", nullable = false, length = 50)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventory")
	public Set getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Set transactions) {
		this.transactions = transactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventory")
	public Set getCarts() {
		return this.carts;
	}

	public void setCarts(Set carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventory")
	public Set getInventoryimages() {
		return this.inventoryimages;
	}

	public void setInventoryimages(Set inventoryimages) {
		this.inventoryimages = inventoryimages;
	}

}
