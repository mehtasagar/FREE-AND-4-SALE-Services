package servlet.mvc.rest.model;// default package
// Generated Apr 17, 2016 3:22:53 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "User", catalog = "FreeNForSale")
public class User implements java.io.Serializable {

	private int uid;
	private State state;
	private UserLoginInfo userlogininfo;
	private String name;
	private Date bdate;
	private int phone;
	private String email;
	private String street;
	private String city;
	private Integer zipcode;
	private String sex;
	private Long ssn;
	private Date lastLoginTime;
	private int failedAttempts;
	private String profilePhoto;
	private Set finances = new HashSet(0);
	private Set transactions = new HashSet(0);
	private Set carts = new HashSet(0);
	private Set inventories = new HashSet(0);
	private Sellerreview sellerreviewByUid;
	private Set sellerreviewsForUid = new HashSet(0);

	public User() {
	}

	public User(UserLoginInfo userlogininfo, String name, int phone, String email, Date lastLoginTime,
			int failedAttempts) {
		this.userlogininfo = userlogininfo;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.lastLoginTime = lastLoginTime;
		this.failedAttempts = failedAttempts;
	}

	public User(State state, UserLoginInfo userlogininfo, String name, Date bdate, int phone, String email,
			String street, String city, Integer zipcode, String sex, Long ssn, Date lastLoginTime, int failedAttempts,
			String profilePhoto, Set finances, Set transactions, Set carts, Set inventories,
			Sellerreview sellerreviewByUid, Set sellerreviewsForUid) {
		this.state = state;
		this.userlogininfo = userlogininfo;
		this.name = name;
		this.bdate = bdate;
		this.phone = phone;
		this.email = email;
		this.street = street;
		this.city = city;
		this.zipcode = zipcode;
		this.sex = sex;
		this.ssn = ssn;
		this.lastLoginTime = lastLoginTime;
		this.failedAttempts = failedAttempts;
		this.profilePhoto = profilePhoto;
		this.finances = finances;
		this.transactions = transactions;
		this.carts = carts;
		this.inventories = inventories;
		this.sellerreviewByUid = sellerreviewByUid;
		this.sellerreviewsForUid = sellerreviewsForUid;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userlogininfo"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "UId", unique = true, nullable = false)
	public int getUid() {
		return this.uid;
	}

	public void setUid(int uid) {
		this.uid = uid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "StateId")
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public UserLoginInfo getUserLoginInfo() {
		return this.userlogininfo;
	}

	public void setUserLoginInfo(UserLoginInfo userlogininfo) {
		this.userlogininfo = userlogininfo;
	}

	@Column(name = "Name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Bdate", length = 10)
	public Date getBdate() {
		return this.bdate;
	}

	public void setBdate(Date bdate) {
		this.bdate = bdate;
	}

	@Column(name = "Phone", nullable = false)
	public int getPhone() {
		return this.phone;
	}

	public void setPhone(int phone) {
		this.phone = phone;
	}

	@Column(name = "Email", nullable = false, length = 30)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Street", length = 25)
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	@Column(name = "City", length = 15)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "Zipcode")
	public Integer getZipcode() {
		return this.zipcode;
	}

	public void setZipcode(Integer zipcode) {
		this.zipcode = zipcode;
	}

	@Column(name = "Sex", length = 1)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "SSN")
	public Long getSsn() {
		return this.ssn;
	}

	public void setSsn(Long ssn) {
		this.ssn = ssn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastLoginTime", nullable = false, length = 19)
	public Date getLastLoginTime() {
		return this.lastLoginTime;
	}

	public void setLastLoginTime(Date lastLoginTime) {
		this.lastLoginTime = lastLoginTime;
	}

	@Column(name = "FailedAttempts", nullable = false)
	public int getFailedAttempts() {
		return this.failedAttempts;
	}

	public void setFailedAttempts(int failedAttempts) {
		this.failedAttempts = failedAttempts;
	}

	@Column(name = "ProfilePhoto", length = 100)
	public String getProfilePhoto() {
		return this.profilePhoto;
	}

	public void setProfilePhoto(String profilePhoto) {
		this.profilePhoto = profilePhoto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getFinances() {
		return this.finances;
	}

	public void setFinances(Set finances) {
		this.finances = finances;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Set transactions) {
		this.transactions = transactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getCarts() {
		return this.carts;
	}

	public void setCarts(Set carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getInventories() {
		return this.inventories;
	}

	public void setInventories(Set inventories) {
		this.inventories = inventories;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userByUid")
	public Sellerreview getSellerreviewByUid() {
		return this.sellerreviewByUid;
	}

	public void setSellerreviewByUid(Sellerreview sellerreviewByUid) {
		this.sellerreviewByUid = sellerreviewByUid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUid_1")
	public Set getSellerreviewsForUid() {
		return this.sellerreviewsForUid;
	}

	public void setSellerreviewsForUid(Set sellerreviewsForUid) {
		this.sellerreviewsForUid = sellerreviewsForUid;
	}

}
